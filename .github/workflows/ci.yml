name: CI/CD

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: pipenv install --dev

      - name: Run Black formatter check
        run: pipenv run black --check .

      - name: Run Flake8 linter check
        run: pipenv run flake8 .

      - name: Run tests (unit only)
        run: pipenv run pytest -m "not integration" -q

  build-and-push:
    if: (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') && github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate requirements.txt for Docker build
        run: |
          pip install pipenv
          pipenv requirements > requirements.txt

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}

  integration:
    if: (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') && github.event_name == 'push'
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run container
        run: |
          docker run -d --rm -p 9696:9696 --name credit ghcr.io/${{ github.repository }}:${{ github.sha }}
          for i in {1..50}; do
            if curl -fsS http://localhost:9696/ping >/dev/null; then break; fi
            sleep 0.2
          done

      - name: Run predict-test.py against the container
        run: |
          python -m pip install --upgrade pip requests
          PREDICTION_URL=http://localhost:9696/predict python predict-test.py

      - name: Stop container
        if: always()
        run: docker stop credit

  deploy:
    if: (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') && github.event_name == 'push'
    needs: [test, build-and-push, integration]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    strategy:
      matrix:
        include:
          - env: dev
            service: credit-risk-service-dev
            threshold: 0.3
          - env: staging
            service: credit-risk-service-staging
            threshold: 0.5
          - env: prod
            service: credit-risk-service
            threshold: 0.5

    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Deploy to Cloud Run (${{ matrix.env }})
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: '${{ matrix.service }}'
          region: 'us-central1'
          image: ghcr.io/${{ github.repository }}:${{ github.sha }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          env_vars: |
            PREDICTION_THRESHOLD=${{ matrix.threshold }}
            GIT_SHA=${{ github.sha }}
