# This is a basic workflow to help you get started with Actions.
name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This job runs tests on every push and pull request
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

          pip install pipenv
          pipenv install --dev
          pipenv run pytest

  # This job builds and pushes the Docker image to the GitHub Container Registry
  build-and-push:
    # This job only runs if the 'test' job succeeds and the event is a push to the master branch
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest
    # Grant permissions for the GITHUB_TOKEN to push to the registry
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate requirements.txt for Docker build
        run: |
          pip install pipenv
          pipenv lock -r > requirements.txt

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}

  # This job deploys the container to Google Cloud Run
  deploy:
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    needs: [test, build-and-push]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # Required for authentication

    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: 'credit-risk-service' # Name your service
          region: 'us-central1' # Choose a region
          image: ghcr.io/${{ github.repository }}:${{ github.sha }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          env_vars: |
            PREDICTION_THRESHOLD=0.5
