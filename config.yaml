# ---------------- File Paths ----------------
data_paths:
  raw_data: "data/CreditScoring.csv"
  training_profile: "artifacts/training_data_profile.json"
  metrics_output: "artifacts/training_metrics.json"
  model_output_dir: "artifacts" # Directory to save model artifacts
  latest_model_name: "model.joblib" # The main model file for prediction

# ---------------- Feature Engineering & Selection ----------------
features:
  # Raw features to be used for profiling and initial engineering
  numerical_features: [ "seniority", "time", "age", "expenses", "income", "assets", "debt", "amount", "price" ]
  categorical_features: [ "home", "marital", "records", "job" ]

  # Parameters for the feature selection step
  feature_selection:
    threshold: "median" # Threshold for SelectFromModel (e.g., 'median', 'mean', or a float value)
    n_estimators: 100 # Estimators for the preliminary RandomForest used in selection

# ---------------- Model Training & Experimentation ----------------
training:
  validation_split_size: 0.2
  random_state: 42
  cv_folds: 5 # Number of cross-validation folds in GridSearchCV

  # Experimentation framework: define all models and their hyperparameter grids here
  models_to_run:
    LogisticRegression:
      estimator_class: "sklearn.linear_model.LogisticRegression"
      static_params:
        solver: "liblinear"
        random_state: 42
        max_iter: 1000 # Increased to prevent convergence warnings
      param_grid:
        C: [0.1, 1.0, 10.0]
        penalty: ['l1', 'l2']

    RandomForestClassifier:
      estimator_class: "sklearn.ensemble.RandomForestClassifier"
      static_params:
        random_state: 42
        n_jobs: -1
      param_grid:
        n_estimators: [150, 200]
        max_depth: [10, 15]
        min_samples_leaf: [3, 5]

    XGBoostClassifier:
      estimator_class: "xgboost.XGBClassifier"
      static_params:
        random_state: 42
        n_jobs: -1
        use_label_encoder: False
        eval_metric: "logloss"
      param_grid:
        n_estimators: [100, 200]
        max_depth: [3, 5]
        learning_rate: [0.1, 0.3]